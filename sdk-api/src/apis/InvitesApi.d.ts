/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { InviteSendRequest, InviteStatusEnum, InviteUpdateRequest, InvitesResponse } from '../models';
export interface CreateInviteRequest {
    organizationId: string;
    inviteSendRequest: InviteSendRequest;
}
export interface DeleteInviteRequest {
    inviteId: string;
}
export interface GetInvitesRequest {
    status: InviteStatusEnum;
}
export interface GetOrganizationInvitesByOrganizationIdRequest {
    organizationId: string;
}
export interface UpdateInviteRequest {
    inviteId: string;
    inviteUpdateRequest: InviteUpdateRequest;
}
/**
 *
 */
export declare class InvitesApi extends runtime.BaseAPI {
    /**
     * Creates an invite to the organization
     */
    createInviteRaw(requestParameters: CreateInviteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Creates an invite to the organization
     */
    createInvite(requestParameters: CreateInviteRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Delete invite for user
     */
    deleteInviteRaw(requestParameters: DeleteInviteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete invite for user
     */
    deleteInvite(requestParameters: DeleteInviteRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Get all the user invites
     */
    getInvitesRaw(requestParameters: GetInvitesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InvitesResponse>>;
    /**
     * Get all the user invites
     */
    getInvites(requestParameters: GetInvitesRequest, initOverrides?: RequestInit): Promise<InvitesResponse>;
    /**
     * Fetches all the Invites the belong to the organization
     */
    getOrganizationInvitesByOrganizationIdRaw(requestParameters: GetOrganizationInvitesByOrganizationIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<InvitesResponse>>;
    /**
     * Fetches all the Invites the belong to the organization
     */
    getOrganizationInvitesByOrganizationId(requestParameters: GetOrganizationInvitesByOrganizationIdRequest, initOverrides?: RequestInit): Promise<InvitesResponse>;
    /**
     * Update invite for user (accept/reject)
     */
    updateInviteRaw(requestParameters: UpdateInviteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Update invite for user (accept/reject)
     */
    updateInvite(requestParameters: UpdateInviteRequest, initOverrides?: RequestInit): Promise<void>;
}
