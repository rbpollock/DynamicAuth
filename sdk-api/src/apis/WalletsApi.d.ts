/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CreateUserEmbeddedWalletsRequest, CreateWalletRequest, UserResponse, UserWalletsResponse, Wallet } from '../models';
export interface CreateEmbeddedWalletRequest {
    environmentId: string;
    createUserEmbeddedWalletsRequest: CreateUserEmbeddedWalletsRequest;
}
export interface CreateWalletOperationRequest {
    userId: string;
    createWalletRequest: CreateWalletRequest;
}
export interface DeleteWalletByIdRequest {
    walletId: string;
}
export interface GetWalletByIdRequest {
    walletId: string;
}
export interface GetWalletsByUserIdRequest {
    userId: string;
}
/**
 *
 */
export declare class WalletsApi extends runtime.BaseAPI {
    /**
     * Creates a new embedded wallet for a user given an email or userId. If an email is provided and it is not associated with an existing user this call will also create a new user.
     * Creates a new embedded wallet for a user given an identifier
     */
    createEmbeddedWalletRaw(requestParameters: CreateEmbeddedWalletRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UserResponse>>;
    /**
     * Creates a new embedded wallet for a user given an email or userId. If an email is provided and it is not associated with an existing user this call will also create a new user.
     * Creates a new embedded wallet for a user given an identifier
     */
    createEmbeddedWallet(requestParameters: CreateEmbeddedWalletRequest, initOverrides?: RequestInit): Promise<UserResponse>;
    /**
     * Creates a new wallet for the user
     */
    createWalletRaw(requestParameters: CreateWalletOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Wallet>>;
    /**
     * Creates a new wallet for the user
     */
    createWallet(requestParameters: CreateWalletOperationRequest, initOverrides?: RequestInit): Promise<Wallet>;
    /**
     * Delete wallet
     */
    deleteWalletByIdRaw(requestParameters: DeleteWalletByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete wallet
     */
    deleteWalletById(requestParameters: DeleteWalletByIdRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Get a wallet using the ID
     */
    getWalletByIdRaw(requestParameters: GetWalletByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Wallet>>;
    /**
     * Get a wallet using the ID
     */
    getWalletById(requestParameters: GetWalletByIdRequest, initOverrides?: RequestInit): Promise<Wallet>;
    /**
     * Get wallets by user
     */
    getWalletsByUserIdRaw(requestParameters: GetWalletsByUserIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UserWalletsResponse>>;
    /**
     * Get wallets by user
     */
    getWalletsByUserId(requestParameters: GetWalletsByUserIdRequest, initOverrides?: RequestInit): Promise<UserWalletsResponse>;
}
