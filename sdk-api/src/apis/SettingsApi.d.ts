/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Provider, ProviderCreateRequest, ProviderUpdateRequest, ProviderUrlsResponse, ProvidersResponse } from '../models';
export interface CreateProviderRequest {
    environmentId: string;
    providerCreateRequest: ProviderCreateRequest;
}
export interface DeleteProviderRequest {
    providerId: string;
}
export interface DisableProviderRequest {
    providerId: string;
}
export interface EnableProviderRequest {
    providerId: string;
}
export interface GetEnvironmentProviderUrlsRequest {
    environmentId: string;
}
export interface GetEnvironmentProvidersRequest {
    environmentId: string;
}
export interface GetProviderRequest {
    providerId: string;
}
export interface UpdateProviderRequest {
    providerId: string;
    providerUpdateRequest: ProviderUpdateRequest;
}
/**
 *
 */
export declare class SettingsApi extends runtime.BaseAPI {
    /**
     * Creates a new provider for the project environment
     */
    createProviderRaw(requestParameters: CreateProviderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Provider>>;
    /**
     * Creates a new provider for the project environment
     */
    createProvider(requestParameters: CreateProviderRequest, initOverrides?: RequestInit): Promise<Provider>;
    /**
     * Delete a provider by providerId
     */
    deleteProviderRaw(requestParameters: DeleteProviderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete a provider by providerId
     */
    deleteProvider(requestParameters: DeleteProviderRequest, initOverrides?: RequestInit): Promise<void>;
    /**
     * Disable the provider for the environment
     */
    disableProviderRaw(requestParameters: DisableProviderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Provider>>;
    /**
     * Disable the provider for the environment
     */
    disableProvider(requestParameters: DisableProviderRequest, initOverrides?: RequestInit): Promise<Provider>;
    /**
     * Enable the provider for the environment
     */
    enableProviderRaw(requestParameters: EnableProviderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Provider>>;
    /**
     * Enable the provider for the environment
     */
    enableProvider(requestParameters: EnableProviderRequest, initOverrides?: RequestInit): Promise<Provider>;
    /**
     * Get the URLs for the environment providers
     */
    getEnvironmentProviderUrlsRaw(requestParameters: GetEnvironmentProviderUrlsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ProviderUrlsResponse>>;
    /**
     * Get the URLs for the environment providers
     */
    getEnvironmentProviderUrls(requestParameters: GetEnvironmentProviderUrlsRequest, initOverrides?: RequestInit): Promise<ProviderUrlsResponse>;
    /**
     * Get the providers for an environment
     */
    getEnvironmentProvidersRaw(requestParameters: GetEnvironmentProvidersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ProvidersResponse>>;
    /**
     * Get the providers for an environment
     */
    getEnvironmentProviders(requestParameters: GetEnvironmentProvidersRequest, initOverrides?: RequestInit): Promise<ProvidersResponse>;
    /**
     * Gets a provider
     */
    getProviderRaw(requestParameters: GetProviderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Provider>>;
    /**
     * Gets a provider
     */
    getProvider(requestParameters: GetProviderRequest, initOverrides?: RequestInit): Promise<Provider>;
    /**
     * Updates a provider
     */
    updateProviderRaw(requestParameters: UpdateProviderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Provider>>;
    /**
     * Updates a provider
     */
    updateProvider(requestParameters: UpdateProviderRequest, initOverrides?: RequestInit): Promise<Provider>;
}
