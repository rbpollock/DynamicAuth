/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * This contains standard JWT claims to identify a session for the Dynamic user. For more details, see: https://www.iana.org/assignments/jwt/jwt.xhtml#claims
 * @export
 * @interface MinifiedDynamicJwt
 */
export interface MinifiedDynamicJwt {
    /**
     * Project environment jwt public key id, used to verify the jwt using the the jwks endpoint
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    kid: string;
    /**
     * Audience: this will be the origin header, pertaining to the client site
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    aud: string;
    /**
     * Issuer: current backend api host + environment id
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    iss: string;
    /**
     * Dynamic user ID
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    sub: string;
    /**
     * Dynamic session ID
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    sid: string;
    /**
     * Expiration timestamp
     * @type {number}
     * @memberof MinifiedDynamicJwt
     */
    exp?: number;
    /**
     * Timestamp for when the JWT was issued at
     * @type {number}
     * @memberof MinifiedDynamicJwt
     */
    iat?: number;
    /**
     * Dynamic environment ID
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    environmentId: string;
    /**
     * ID of the most recently used verified credential. This would refer to a value in the verified credentials list in the corresponding SdkUser
     * @type {string}
     * @memberof MinifiedDynamicJwt
     */
    lastVerifiedCredentialId: string;
    /**
     * This will be populated when `environment_id` is the Dynamic production environment ID. This is a list of environment IDs that the subject user ID can make configuration and set up changes as as organization admin.
     * @type {Array<string>}
     * @memberof MinifiedDynamicJwt
     */
    memberEnvironmentIds?: Array<string>;
}
export declare function MinifiedDynamicJwtFromJSON(json: any): MinifiedDynamicJwt;
export declare function MinifiedDynamicJwtFromJSONTyped(json: any, ignoreDiscriminator: boolean): MinifiedDynamicJwt;
export declare function MinifiedDynamicJwtToJSON(value?: MinifiedDynamicJwt | null): any;
